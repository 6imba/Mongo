# Create:
    - db.Collection1.insertOne({name: "Amir", age: 22})
    - db.Collection1.insertMany([{name: "Amir", age: 22}, {name: "Sital Being", age: 21}])
# Retrive:
    - db.Collection1.find()
    - db.Collection1.findOne({age: 22})
    - db.Collection1.findOne({name: "Amir"})
# Update:
    - db.Collection1.updateOne({name: "Amir"}, {$set: {age: 22}})
    - db.Collection1.updateMany({age: 22}, {$set: {role: "Moderator"}})
    - db.Collection1.findByIdAndUpdate({age: 22}, {$set: {role: "Moderator"}})
# Delete:
    - db.simbaCollection.deleteOne({status: false})
    - db.simbaCollection.deleteMany({status: false})
    - db.simbaCollection.deleteMany({})

************************************************************************************************************************************
- CollectionModel.Operation(<filter>, <operational_value>) => perform the operational_value to the  matched filtered document.
    - CollectionModel: db.simbaCollection- in MongoDB shell, UserModel- in mongoose
    - Operation: insertOne, insertMany, find, findOne, updateOne, findByIdAndUpdate, updateMany, deleteOne, deleteMany
    - <filter>: {name: "Amir"}
    - <update>: {$set: {role: "moderator"}}

************************************************************************************************************************************
- updateOne: return actknowledgement
- findByIdAndUpdate: returns updated object